{"version":3,"sources":["containers/container/Container.js","components/btn-add/BtnAdd.js","components/btn-list/BtnList.js","components/btn-search/BtnSearch.js","containers/header/Header.js","components/btn-create-new-exp/ListItemBtnCreateNewExp.js","components/pagination/pag-item/PaginationItem.js","components/pagination/Pagination.js","components/listItemViewExp/ListItemViewExp.js","containers/main/MainScripts.js","components/modal-components/LighteningBackground.js","components/modal-components/ModalHeader.js","components/modal-components/modal-content-items/ModalButton.js","components/modal-components/modal-content-items/ModalFild.js","components/modal-components/modal-content-items/ModalDataOfExp.js","components/modal-components/modal-content-items/ModalDataOfExpForCreate.js","components/modal-components/modal-content-items/ModalDataOfInitiator.js","components/modal-components/modal-content-items/ModalDataOfResearchProcess.js","components/modal-components/modal-content-items/ModalDataOfResearchResult.js","components/modal-components/modal-content-items/ModalSelectListItem.js","components/modal-components/modal-content-items/ModalSelectListItemSup.js","components/modal-components/modal-content-items/ModalSelectList.js","components/modal-components/modal-content-items/ModalSelect.js","components/modal-components/ModalContent.js","components/modal-components/ModalContainer.js","containers/modal/Modal.js","components/loader/Loader.js","containers/main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","BtnAdd","href","BtnList","BtnSearch","Header","BtnCreateNewExp","setModalPropertiesHandlerForCreateNewExp","onClick","PaginationItem","symbol","active","setCurrentPage","Pagination","funcCurrentPage","countOfPages","currentPage","list","localCurrentPage","i","push","prevPaginationItem","arr","forIndex","forCondition","length","unshift","paginationItemsDisplay","nextPaginationItem","nextPaginationItemsDisplay","timeNumberToTimeString","day","month","year","ListItemViewExp","exp","setModalPropertiesHandler","id","agency_of_initiator","unit_of_initiator","by_materials","number_of_the_material","category_of_research","surname_of_executor","date","Date","date_of_incoming","getDate","getMonth","getFullYear","date_of_execution","MainScripts","loadDB","urlDb","setDbState","fetch","then","res","json","result","prev","isLoaded","items","error","setState","loadExpsForMainPage","db","setModalPropertiesHandlerForUpdateExp","localDB","localDbForInvert","index","year2021","Math","ceil","maxNumOfExps","minNumOfExps","localDb","forEach","item","LighteningBackground","localModalProperties","useContext","DbContext","isOpen","setModalProperties","ModalHeader","title","ModalButton","type","expData","localType","selectedFild","style","dbState","indexOf","method","mode","headers","body","JSON","stringify","catch","e","console","log","ModalFild","data","setSelectedFild","setSelectedFildHendler","value","middelePart","autoFocus","ModalDataOfExp","article","type_of_research","type_of_banknote","difficulty_of_expertise","date_of_incoming_verification","countOFExps","ModalDataOfInitiator","post_of_initiator","surname_of_initiator","ModalDataOfResearchProcess","date_of_petition","date_of_prolongation","end_date_of_petition","end_date_of_prolongation","date_of_approval_of_the_petition","date_of_notification","ModalDataOfResearchResult","result_of_expertise","date_of_outcome","result_of_verification","date_of_execution_verification","String","date_of_outcome_verification","ModalSelectListItem","name","fildNumber","fildText","setExpData","onInput","event","target","maxLength","onClickHandler","ModalSelectListItemSup","description","ModalSelectList","typeSelectedFild","setFildDateToExp","end_date_of_expertise","fArgs","onClickDay","elemTextFildAdd","Array","isArray","fName","elemsArrAdd","fDesc","elemDescFildAdd","ModalSelect","ModalContent","tempExpValues","useState","expProperties","setExpProperties","setTypeSelectedFild","onKeyDownHendler","fId","Number","numberfArg","funcForNav","key","preventDefault","Object","keys","modalProperties","filter","expId","onKeyDown","ModalDataOfExpForCreate","ModalContainer","Modal","Loader","React","createContext","Main","useEffect","ExpsForMainPageProperties","Provider","ListItemBtnCreateNewExp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34801c8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Container.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <div className=\"container\">\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default Container;\r\n\r\n","import React from \"react\";\r\n\r\nconst BtnAdd = () => (\r\n    <div className=\"btn btn-add\">\r\n        <a href=\"/\"><div></div></a>\r\n    </div>\r\n)\r\n\r\nexport default BtnAdd;","import React from \"react\";\r\n\r\nconst BtnList = () => (\r\n    <div className=\"btn btn-list\">\r\n        <a href=\"/\"><div></div></a>\r\n    </div>\r\n)\r\n\r\nexport default BtnList;\r\n","import React from \"react\";\r\n\r\nconst BtnSearch = () => (\r\n    <div className=\"btn btn-search\">\r\n        <a href=\"/\"><div></div></a>\r\n    </div>\r\n)\r\n\r\nexport default BtnSearch;","import React from 'react';\r\nimport \"./Header.css\";\r\nimport \"../../fonts/phosphor-icons/Icon Font/CSS/phosphor.css\"\r\nimport BtnAdd from '../../components/btn-add/BtnAdd';\r\nimport BtnList from '../../components/btn-list/BtnList';\r\nimport BtnSearch from '../../components/btn-search/BtnSearch';\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <section className=\"header__menu\">\r\n            <div className=\"header__menu-title\">Отдел криминалистических экспертих</div>\r\n            <div className=\"header__menu-buttons\">\r\n                <BtnAdd />\r\n                <BtnList />\r\n                <BtnSearch />\r\n            </div>\r\n        </section>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst BtnCreateNewExp = ({ setModalPropertiesHandlerForCreateNewExp }) => {\r\n    \r\n    return (<div className=\"main__item btn-create-new-exp\" onClick={setModalPropertiesHandlerForCreateNewExp}>+</div>)\r\n}\r\n\r\nexport default BtnCreateNewExp;","import React from 'react';\r\nimport './PaginationItem.css'\r\n\r\nconst PaginationItem = ({ symbol, active, setCurrentPage }) => {\r\n  return (\r\n    active ?\r\n      <li className=\"main__pagination-list-item-active\" onClick={() => setCurrentPage(symbol)}>{symbol}</li>\r\n      :\r\n      <li className=\"main__pagination-list-item\" onClick={() => setCurrentPage(symbol)}>{symbol}</li>\r\n  );\r\n};\r\n\r\nexport default PaginationItem;","import React from 'react';\r\nimport PaginationItem from './pag-item/PaginationItem';\r\nimport './Pagination.css';\r\n\r\nconst Pagination = ({ countOfPages, currentPage, setCurrentPage }) => {\r\n\r\n  const list = [];\r\n  let localCurrentPage = currentPage;\r\n\r\n  for (let i = 1; i <= countOfPages; i++) {\r\n    list.push(i);\r\n  }\r\n\r\n  function prevPaginationItem(funcCurrentPage) {\r\n    if (funcCurrentPage > 1)\r\n      if ((funcCurrentPage - 10) <= 0)\r\n        setCurrentPage(1);\r\n      else\r\n        setCurrentPage(funcCurrentPage - 10);\r\n  }\r\n  function nextPaginationItem(funcCurrentPage) {\r\n    if (funcCurrentPage < list.length)\r\n      if ((funcCurrentPage + 10) < list.length) {\r\n        setCurrentPage(funcCurrentPage + 10);\r\n      } else if ((funcCurrentPage + 10) >= list.length) {\r\n        setCurrentPage(countOfPages);\r\n      }\r\n  }\r\n\r\n  function prevPaginationItemsDisplay(funcCurrentPage) {\r\n    if (funcCurrentPage > 6) {\r\n      return (<li className=\"main__pagination-list-item\" onClick={() => prevPaginationItem(localCurrentPage)}>&lt;</li>);\r\n    }\r\n    return <li className=\"main__pagination-list-item-hidden\" ></li>;\r\n  }\r\n\r\n  function nextPaginationItemsDisplay(funcCurrentPage) {\r\n    if (list.length - funcCurrentPage > 4) {\r\n      return (<li className=\"main__pagination-list-item\" onClick={() => nextPaginationItem(localCurrentPage)}>&gt;</li>);\r\n    }\r\n    return <li className=\"main__pagination-list-item-hidden\" ></li>;\r\n  }\r\n\r\n  function paginationItemsDisplay(funcCurrentPage) {\r\n    const arr = [];\r\n\r\n    if ((funcCurrentPage - 5) >= 1) {\r\n      for (let i = funcCurrentPage - 5; i < funcCurrentPage; i++) {\r\n        arr.push(<PaginationItem key={i} symbol={i} setCurrentPage={setCurrentPage} />);\r\n      }\r\n    } else if ((funcCurrentPage - 5) < 1) {\r\n      for (let i = 1; i < funcCurrentPage; i++) {\r\n        arr.push(<PaginationItem key={i} symbol={i} setCurrentPage={setCurrentPage} />);\r\n      }\r\n    }\r\n\r\n    arr.push(<PaginationItem key={funcCurrentPage} symbol={funcCurrentPage} active={true} setCurrentPage={setCurrentPage} />);\r\n\r\n    const forIndex = funcCurrentPage + 1;\r\n    let forCondition = (funcCurrentPage + 10) - arr.length;\r\n    if (forCondition > countOfPages)\r\n      forCondition = countOfPages;\r\n\r\n    for (let i = forIndex; i <= forCondition; i++) {\r\n      arr.push(<PaginationItem key={i} symbol={i} setCurrentPage={setCurrentPage} />);\r\n    }\r\n\r\n    if (arr.length < 10) {\r\n      let forIndex = funcCurrentPage - 6;\r\n      const forCondition = 10 - arr.length;\r\n      if (forIndex > 0) {\r\n        for (let i = 0; i < forCondition; i++) {\r\n          arr.unshift(<PaginationItem key={forIndex} symbol={forIndex} setCurrentPage={setCurrentPage} />);\r\n          forIndex--;\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main__pagination\">\r\n      <ul className=\"main__pagination-list\">\r\n        {prevPaginationItemsDisplay(localCurrentPage)}\r\n        {paginationItemsDisplay(localCurrentPage)}\r\n        {nextPaginationItemsDisplay(localCurrentPage)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\nconst timeNumberToTimeString = (day, month, year) => {\r\n  return `${(day < 10) ? '0' + day : day}.${(month < 10) ? '0' + month : month}.${year}`;\r\n}\r\n\r\nconst ListItemViewExp = ({ exp, setModalPropertiesHandler }) => {\r\n\r\n  const id = exp.id;\r\n  const date_of_incoming = () => {\r\n    const date = new Date(+exp.date_of_incoming);\r\n    return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n  }\r\n  const date_of_execution = () => {\r\n    if (exp.date_of_execution) {\r\n      const date = new Date(+exp.date_of_execution);\r\n      return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n    } else {\r\n      return 'не готова';\r\n    }\r\n  }\r\n  const agency_of_initiator = exp.agency_of_initiator;\r\n  const unit_of_initiator = exp.unit_of_initiator;\r\n  const by_materials = exp.by_materials;\r\n  const number_of_the_material = exp.number_of_the_material;\r\n  const category_of_research = exp.category_of_research;\r\n  const surname_of_executor = exp.surname_of_executor;\r\n\r\n\r\n  return (\r\n    <div className=\"main__item\" onClick={() => setModalPropertiesHandler(exp)}>\r\n      {/* <div className=\"main__item-status\">ВЫПОЛНЯЕТСЯ осталось - 15 дн.</div> */}\r\n      <div className=\"main__item-status\"></div>\r\n      <div className=\"main__item-data\">\r\n        <div className=\"main__item-number\">№ {id}</div>\r\n        <div className=\"main__item-date\">{date_of_incoming()} - {date_of_execution()}</div>\r\n        <div className=\"main__item-agency\">{agency_of_initiator}</div>\r\n        <div className=\"main__item-unit\">{unit_of_initiator}</div>\r\n        <div className=\"main__item-byMaterial\">{by_materials} {number_of_the_material}</div>\r\n        <div className=\"main__item-type\">{category_of_research === 'Почерковедческая экспертиза' ? 'Почерковед-кая эксп-а' : category_of_research}</div>\r\n        <div className=\"main__item-executor\">{surname_of_executor}</div>\r\n        <div className=\"main__item-state\">\r\n          <div className=\"main__item-state-item main__item-state-ready main__item-state-item-active\">готова к выдачи</div>\r\n          <div className=\"main__item-state-item main__item-state-on-hands\">выдана нарочно</div>\r\n          <div className=\"main__item-state-item main__item-state-on-post\">отп-на почтой</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListItemViewExp;\r\n","import ListItemViewExp from '../../components/listItemViewExp/ListItemViewExp';\r\n\r\nconst MainScripts = {\r\n  loadDB: (urlDb, setDbState) => {\r\n    fetch(urlDb)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setDbState(prev => {\r\n            return {\r\n              ...prev,\r\n              isLoaded: true,\r\n              items: result\r\n            }\r\n          })\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  },\r\n  loadExpsForMainPage: (db, currentPage, setModalPropertiesHandlerForUpdateExp) => {\r\n    const localDB = db; // локальная переменная базы для ожидания выполнения промиса\r\n    // получение базы данных и определение диапозона отрисовываемых эксп - начало\r\n    const localDbForInvert = [];\r\n    for (let index = localDB.year2021.length - 1; index >= 0; index--) { // цикл для перераспределения массива в обратном порядке\r\n      localDbForInvert.push(localDB.year2021[index]);\r\n    }\r\n    const countOfPages = Math.ceil(localDbForInvert.length / 20);\r\n    let maxNumOfExps = currentPage * 20; // номер эксп отражаемой первой\r\n    let minNumOfExps = maxNumOfExps - 19; // номер эксп отражаемой последней\r\n    // получение базы данных и определение диапозона отрисовываемых эксп - конец\r\n\r\n    const localDb = [];\r\n    localDbForInvert.forEach((item, index) => {\r\n      if (++index >= minNumOfExps && index <= maxNumOfExps) {\r\n        localDb.push(<ListItemViewExp key={item.id} exp={item} setModalPropertiesHandler={setModalPropertiesHandlerForUpdateExp} />);\r\n      }\r\n    })\r\n    return { localDb, countOfPages };\r\n  }\r\n}\r\n\r\nexport default MainScripts;","import React, { useContext } from 'react';\r\nimport { DbContext } from '../../containers/main/Main';\r\nimport './LighteningBackground.css';\r\n\r\nconst LighteningBackground = () => {\r\n    const localModalProperties = useContext(DbContext);\r\n    const setModalPropertiesHandler = (isOpen) => {\r\n        localModalProperties.setModalProperties((prev) => { return { ...prev, isOpen: isOpen } });\r\n    }\r\n\r\n    return <div className=\"lightening-background\" onClick={() => setModalPropertiesHandler(false)} ></div>;\r\n}\r\n\r\nexport default LighteningBackground;","import React from 'react';\r\nimport './ModalHeader.css'\r\n\r\nconst ModalHeader = ({ title }) => {\r\n    return (\r\n        <div className=\"modal-header\">{title}</div>\r\n    );\r\n}\r\n\r\nexport default ModalHeader;","import React, { useContext } from 'react';\r\nimport { DbContext } from '../../../containers/main/Main';\r\nimport './ModalButton.css'\r\n\r\nconst ModalButton = ({ type, expData, selectedFild }) => {\r\n  const urlDb = 'http://localhost:4000/api/db';\r\n  const localType = type;\r\n  const style = `modal-content-button ${localType === 'add' ? 'button_add' : 'button_cancel'}`;\r\n  const localModalProperties = useContext(DbContext);\r\n  const setModalPropertiesHandler = (isOpen) => {\r\n        \r\n    for (let item of localModalProperties.dbState.items.year2021) {\r\n      if (item.id === expData.id) {\r\n        localModalProperties.dbState.items.year2021[localModalProperties.dbState.items.year2021.indexOf(item)] = expData;\r\n      }\r\n    }\r\n\r\n    fetch(urlDb, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 'Content-Type': 'plain/text',\r\n      },\r\n      body: JSON.stringify(localModalProperties.dbState.items) // body data type must match \"Content-Type\" header\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n    \r\n    localModalProperties.setModalProperties((prev) => { return { ...prev, isOpen } });\r\n  }\r\n\r\n  const setModalPropertiesHandlerForCancel = (isOpen) => {\r\n    localModalProperties.setModalProperties((prev) => { return { ...prev, isOpen } });\r\n  }\r\n\r\n  if (localType === 'add') {\r\n    return (\r\n      <button className={style} onClick={() => setModalPropertiesHandler(false)}>\r\n        {'Принять'}\r\n      </button>\r\n    )\r\n  } else if (localType === 'cancel') {\r\n    return (\r\n      <button className={style} onClick={() => setModalPropertiesHandlerForCancel(false)}>\r\n        {'Отменить'}\r\n      </button>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default ModalButton;","import React from 'react';\r\nimport './ModalFild.css'\r\n\r\nconst ModalFild = ({ type, data, selectedFild, setSelectedFild }) => {\r\n    console.log(selectedFild);\r\n    const setSelectedFildHendler = (type, data) => {\r\n        setSelectedFild({\r\n            type,\r\n            value: data\r\n        });\r\n    }\r\n\r\n    const middelePart = () => {\r\n        return (\r\n            <>\r\n                <div className=\"data_of_exp-item-title\">{type}</div>\r\n                {\r\n                    type === 'Номер материала' ?\r\n                        <div className=\"data_of_exp-item-content data_of_exp-item-big_word\">{data}</div> :\r\n                        type === 'Подразделение инициатора' ?\r\n                            <div className=\"data_of_exp-item-content data_of_exp-item-big_words\">{data}</div> :\r\n                            <div className=\"data_of_exp-item-content\">{data}</div>\r\n                }\r\n            </>\r\n        )\r\n    };\r\n\r\n    if (selectedFild.type === type) {\r\n        return (\r\n            <button className=\"data_of_exp-item-active\" onClick={() => { setSelectedFildHendler(type, data) }} autoFocus>\r\n                {middelePart()}\r\n            </button>\r\n        )\r\n    }\r\n    return (\r\n        <button className=\"data_of_exp-item\" onClick={() => { setSelectedFildHendler(type, data) }}>\r\n            {middelePart()}\r\n        </button>\r\n    );\r\n\r\n}\r\n\r\nexport default ModalFild;","import React from 'react';\r\nimport ModalFild from './ModalFild';\r\nimport './ModalDataOfExp.css'\r\n\r\nconst ModalDataOfExp = ({ expData, selectedFild, setSelectedFild }) => {\r\n\r\n  const timeNumberToTimeString = (day, month, year) => {\r\n    return `${(day < 10) ? '0' + day : day}.${(month < 10) ? '0' + month : month}.${year}`;\r\n  }\r\n\r\n  const date_of_incoming = () => {\r\n    const date = new Date(+expData.date_of_incoming);\r\n    return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n  }\r\n\r\n  const date_of_incoming_verification = () => {\r\n    const date = new Date(+expData.date_of_incoming_verification);\r\n    return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-content-data_of_exp\">\r\n      <div className=\"modal-content-data_of_exp-title\"><span>Данные о экспертизе</span></div>\r\n      <ModalFild type={'Номер экспертизы'} data={expData.id} selectedFild={selectedFild} setSelectedFild={setSelectedFild}/>\r\n      <ModalFild type={'Статья'} data={expData.article} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Дата поступления'} data={date_of_incoming()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Тип исследования'} data={expData.category_of_research} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'По материалам'} data={expData.by_materials} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Вид исследования'} data={expData.type_of_research} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Номер материала'} data={expData.number_of_the_material} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Вид документа'} data={expData.type_of_banknote} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Сложность экспертизы'} data={expData.difficulty_of_expertise} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Фамилия исполнителя'} data={expData.surname_of_executor} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Дата назначения проверки'} data={date_of_incoming_verification()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDataOfExp;","import React from 'react';\r\nimport ModalFild from './ModalFild';\r\nimport './ModalDataOfExp.css'\r\n\r\nconst ModalDataOfExp = ({ db, selectedFild, setSelectedFild }) => {\r\n  const countOFExps = db.length;\r\n  console.log('countOFExps: ', countOFExps);\r\n  return (\r\n    <div className=\"modal-content-data_of_exp\">\r\n      <div className=\"modal-content-data_of_exp-title\"><span>Данные о экспертизе</span></div>\r\n      <ModalFild type={'Номер экспертизы'} data={countOFExps + 1} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Статья'} data={'Укажите номер статьи'} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      {/* <ModalFild type={'Дата поступления'} data={date_of_incoming()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Тип исследования'} data={expData.category_of_research} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'По материалам'} data={expData.by_materials} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Вид исследования'} data={expData.type_of_research} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Номер материала'} data={expData.number_of_the_material} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Вид документа'} data={expData.type_of_banknote} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Сложность экспертизы'} data={expData.difficulty_of_expertise} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Фамилия исполнителя'} data={expData.surname_of_executor} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Дата назначения проверки'} data={date_of_incoming_verification()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDataOfExp;","import React from 'react';\r\nimport ModalFild from './ModalFild';\r\nimport './ModalDataOfInitiator.css'\r\n\r\nconst ModalDataOfInitiator = ({ expData, selectedFild, setSelectedFild }) => {\r\n\r\n  return (\r\n    <div className=\"modal-content-data_of_initiator\">\r\n      <div className=\"modal-content-data_of_initiator-title\"><span>Данные о инициаторе</span></div>\r\n      <ModalFild type={'Орган инициатора'} data={expData.agency_of_initiator} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Должность инициатора'} data={expData.post_of_initiator} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Подразделение инициатора'} data={expData.unit_of_initiator} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Фамилия инициатора'} data={expData.surname_of_initiator} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDataOfInitiator;","import React from 'react';\r\nimport ModalFild from './ModalFild';\r\nimport './ModalDataOfResearchProcess.css'\r\n\r\nconst ModalDataOfResearchProcess = ({ expData, selectedFild, setSelectedFild }) => {\r\n\r\n    const timeNumberToTimeString = (day, month, year) => { // функция преобразования даты в удобночитаемый вид \r\n        return `${(day < 10) ? '0' + day : day}.${(month < 10) ? '0' + month : month}.${year}`;\r\n    }\r\n\r\n    const date_of_petition = () => {\r\n        const date = new Date(+expData.date_of_petition);\r\n        return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n    }\r\n    const date_of_prolongation = () => {\r\n        const date = new Date(+expData.date_of_prolongation);\r\n        return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n    }\r\n    const end_date_of_petition = () => {\r\n        const date = new Date(+expData.end_date_of_petition);\r\n        return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n    }\r\n    const end_date_of_prolongation = () => {\r\n        const date = new Date(+expData.end_date_of_prolongation);\r\n        return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n    }\r\n    const date_of_approval_of_the_petition = () => {\r\n        const date = new Date(+expData.date_of_approval_of_the_petition);\r\n        return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n    }\r\n    const date_of_notification = () => {\r\n        const date = new Date(+expData.date_of_notification);\r\n        return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-content-data_of_research_process\">\r\n            <div className=\"modal-content-data_of_research_process-title\"><span>Данные о процессе исследования</span></div>\r\n            <ModalFild type={'Дата вынесения ходатайства'} data={date_of_petition()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n            <ModalFild type={'Дата продления'} data={date_of_prolongation()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n            <ModalFild type={'Конечная дата удовл-я ход-ва'} data={end_date_of_petition()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n            <ModalFild type={'Дата до которой продлена эксп-за'} data={end_date_of_prolongation()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n            <ModalFild type={'Дата удовл-ния ходатайства'} data={date_of_approval_of_the_petition()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n            <ModalFild type={'Дата уведомления'} data={date_of_notification()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalDataOfResearchProcess;","import React from 'react';\r\nimport ModalFild from './ModalFild';\r\nimport './ModalDataOfResearchResult.css'\r\n\r\nconst ModalDataOfResearchResult = ({ expData, selectedFild, setSelectedFild }) => {\r\n\r\n  const timeNumberToTimeString = (day, month, year) => { // функция преобразования даты в удобночитаемый вид \r\n    return `${(day < 10) ? '0' + day : day}.${(month < 10) ? '0' + month : month}.${year}`;\r\n  }\r\n\r\n  const date_of_execution = () => {\r\n    const date = new Date(+expData.date_of_execution);\r\n    return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n  }\r\n  const date_of_outcome = () => {\r\n    const date = new Date(+expData.date_of_outcome);\r\n    return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n  }\r\n  const date_of_execution_verification = () => {\r\n    const date = new Date(+expData.date_of_execution_verification);\r\n    if (String(date) === 'Invalid Date') return null;\r\n    return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n  }\r\n  const date_of_outcome_verification = () => {\r\n    const date = new Date(+expData.date_of_outcome_verification);\r\n    if (String(date) === 'Invalid Date') return null;\r\n    return timeNumberToTimeString(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-content-data_of_research_result\">\r\n      <div className=\"modal-content-data_of_research_result-title\"><span>Данные о процессе исследования</span></div>\r\n      <ModalFild type={'Результат'} data={expData.result_of_expertise} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Дата предпол-го окончания'} data={date_of_execution()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Дата выполнения экспертизы'} data={date_of_execution()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Дата выдачи экспертизы'} data={date_of_outcome()} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Результат проверки'} data={expData.result_of_verification ?? 'Данные отсутствуют'} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Дата выполнения проверки'} data={date_of_execution_verification() ?? 'Данные отсутствуют'} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n      <ModalFild type={'Дата выдачи проверки'} data={date_of_outcome_verification() ?? 'Данные отсутствуют'} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDataOfResearchResult;","import React from 'react';\r\nimport './ModalSelectListItem.css'\r\n\r\nconst ModalSelectListItem = ({ selectedFild, setSelectedFild, name, data, active, fildNumber, fildText, setExpData }) => {\r\n\r\n    if (fildNumber) {\r\n        return (\r\n            <div className=\"modal-content-select-list-item\">\r\n                <input\r\n                    type='text'\r\n                    className=\"modal-content-select-list-item-input\"\r\n                    onInput={(event) => setExpData((prev) => {\r\n                        return {\r\n                            ...prev, number_of_the_material: event.target.value\r\n                        }\r\n                    })}\r\n                    maxLength={18}\r\n                ></input>\r\n            </div>\r\n        )\r\n    }\r\n    if (fildText) {\r\n        return (\r\n            <div className=\"modal-content-select-list-item\">\r\n                <input type='text' className=\"modal-content-select-list-item-input\" maxLength={18}></input>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        setSelectedFild((prev) => {\r\n            return {\r\n                ...prev,\r\n                value: data\r\n            }\r\n        });\r\n\r\n        setExpData((prev) => {\r\n            return {\r\n                ...prev, [name]: data\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        active ?\r\n            <div className=\"modal-content-select-list-item-active\" onClick={onClickHandler}>{data}</div> :\r\n            <div className=\"modal-content-select-list-item\" onClick={onClickHandler}>{data}</div>\r\n    );\r\n}\r\n\r\nexport default ModalSelectListItem;","import React from 'react';\r\nimport './ModalSelectListItemSup.css'\r\n\r\nconst ModalSelectListItemSup = ({ description }) => {\r\n\r\n  return (\r\n    <div className=\"modal-content-select-list-item-sup\">{description}</div>\r\n  );\r\n}\r\n\r\nexport default ModalSelectListItemSup;","import React from 'react';\r\nimport ModalSelectListItem from './ModalSelectListItem';\r\nimport ModalSelectListItemSup from './ModalSelectListItemSup';\r\nimport Calendar from 'react-calendar'\r\nimport './Calendar.css';\r\nimport './ModalSelectList.css'\r\n\r\nconst ModalSelectList = ({ selectedFild, setSelectedFild, typeSelectedFild, expData, setExpData }) => {\r\n\r\n  const elemTextFildAdd = (selectedFild, typeSelectedFild, expData) => {\r\n    if (selectedFild.type === \"Подразделение инициатора\")\r\n      return <ModalSelectListItem key='1' fildText={true} />\r\n    if (typeSelectedFild.fArgs === 'fildNumber')\r\n      return <ModalSelectListItem key='1' setExpData={setExpData} fildNumber={true} />\r\n    if (typeSelectedFild.fArgs === 'fildText')\r\n      return <ModalSelectListItem key='1' fildText={true} />\r\n    if (typeSelectedFild.fArgs === 'calendar') {\r\n      let date;\r\n      selectedFild.type === 'Дата поступления' && (date = new Date(+expData.date_of_incoming));\r\n      selectedFild.type === 'Дата предпол-го окончания' && (date = new Date(+expData.end_date_of_expertise));\r\n      selectedFild.type === 'Дата выполнения экспертизы' && (date = new Date(+expData.date_of_execution));\r\n      selectedFild.type === 'Дата выдачи экспертизы' && (date = new Date(+expData.date_of_outcome));\r\n      selectedFild.type === 'Дата вынесения ходатайства' && (date = new Date(+expData.date_of_petition));\r\n      selectedFild.type === 'Конечная дата удовл-я ход-ва' && (date = new Date(+expData.end_date_of_petition));\r\n      selectedFild.type === 'Дата удовл-ния ходатайства' && (date = new Date(+expData.date_of_approval_of_the_petition));\r\n      selectedFild.type === 'Дата продления' && (date = new Date(+expData.date_of_prolongation));\r\n      selectedFild.type === 'Дата до которой продлена эксп-за' && (date = new Date(+expData.end_date_of_prolongation));\r\n      selectedFild.type === 'Дата уведомления' && (date = new Date(+expData.date_of_notification));\r\n      selectedFild.type === 'Дата назначения проверки' && (date = new Date(+expData.date_of_incoming_verification));\r\n      selectedFild.type === 'Дата выполнения проверки' && (date = new Date(+expData.date_of_execution_verification));\r\n      selectedFild.type === 'Дата выдачи проверки' && (date = new Date(+expData.date_of_outcome_verification));\r\n\r\n      return <Calendar key='1'\r\n        onClickDay={(value, name = selectedFild) => { setFildDateToExp(value, selectedFild) }}\r\n        value={new Date(date.getFullYear(), date.getMonth(), date.getDate())} />\r\n    }\r\n  }\r\n\r\n  const setFildDateToExp = (value, name) => {\r\n    name.type === 'Дата поступления' && setExpData((prev) => { return { ...prev, date_of_incoming: String(+value) } });\r\n    name.type === 'Дата предпол-го окончания' && setExpData((prev) => { return { ...prev, end_date_of_expertise: String(+value) } });\r\n    name.type === 'Дата выполнения экспертизы' && setExpData((prev) => { return { ...prev, date_of_execution: String(+value) } });\r\n    name.type === 'Дата выдачи экспертизы' && setExpData((prev) => { return { ...prev, date_of_outcome: String(+value) } });\r\n    name.type === 'Дата вынесения ходатайства' && setExpData((prev) => { return { ...prev, date_of_petition: String(+value) } });\r\n    name.type === 'Конечная дата удовл-я ход-ва' && setExpData((prev) => { return { ...prev, end_date_of_petition: String(+value) } });\r\n    name.type === 'Дата удовл-ния ходатайства' && setExpData((prev) => { return { ...prev, date_of_approval_of_the_petition: String(+value) } });\r\n    name.type === 'Дата продления' && setExpData((prev) => { return { ...prev, date_of_prolongation: String(+value) } });\r\n    name.type === 'Дата до которой продлена эксп-за' && setExpData((prev) => { return { ...prev, end_date_of_prolongation: String(+value) } });\r\n    name.type === 'Дата уведомления' && setExpData((prev) => { return { ...prev, date_of_notification: String(+value) } });\r\n    name.type === 'Дата назначения проверки' && setExpData((prev) => { return { ...prev, date_of_incoming_verification: String(+value) } });\r\n    name.type === 'Дата выполнения проверки' && setExpData((prev) => { return { ...prev, date_of_execution_verification: String(+value) } });\r\n    name.type === 'Дата выдачи проверки' && setExpData((prev) => { return { ...prev, date_of_outcome_verification: String(+value) } });\r\n  }\r\n\r\n  const elemDescFildAdd = (typeSelectedFild) => {\r\n    return <ModalSelectListItemSup key='2' description={typeSelectedFild.fDesc} />\r\n  }\r\n\r\n  const elemsArrAdd = (selectedFild, setSelectedFild, typeSelectedFild, expData) => {\r\n    let arr = [];\r\n    if (Array.isArray(typeSelectedFild.fArgs)) {\r\n      let i = 3;\r\n\r\n      if (selectedFild.type === \"Подразделение инициатора\") {\r\n        if (expData.agency_of_initiator === \"МВД\") {\r\n\r\n          for (let item of typeSelectedFild.fArgs[0]) {\r\n            i++;\r\n            selectedFild.value === item ?\r\n              arr.push(<ModalSelectListItem key={i} name={typeSelectedFild.fName} data={item} active={true} selectedFild={selectedFild} setSelectedFild={setSelectedFild} setExpData={setExpData} />) :\r\n              arr.push(<ModalSelectListItem key={i} name={typeSelectedFild.fName} data={item} active={false} selectedFild={selectedFild} setSelectedFild={setSelectedFild} setExpData={setExpData} />);\r\n          }\r\n          return arr;\r\n        }\r\n        if (expData.agency_of_initiator === \"ГСУ СК\") {\r\n          for (let item of typeSelectedFild.fArgs[1]) {\r\n            i++;\r\n            selectedFild.value === item ?\r\n              arr.push(<ModalSelectListItem key={i} name={typeSelectedFild.fName} data={item} active={true} selectedFild={selectedFild} setSelectedFild={setSelectedFild} setExpData={setExpData} />) :\r\n              arr.push(<ModalSelectListItem key={i} name={typeSelectedFild.fName} data={item} active={false} selectedFild={selectedFild} setSelectedFild={setSelectedFild} setExpData={setExpData} />);\r\n          }\r\n          return arr;\r\n        }\r\n        if (expData.agency_of_initiator === \"ФСБ\") return\r\n        if (expData.agency_of_initiator === \"Суд\") return\r\n      }\r\n\r\n      for (let item of typeSelectedFild.fArgs) {\r\n        i++;\r\n        selectedFild.value === item ?\r\n          arr.push(<ModalSelectListItem key={i} name={typeSelectedFild.fName} data={item} active={true} selectedFild={selectedFild} setSelectedFild={setSelectedFild} setExpData={setExpData}/>) :\r\n          arr.push(<ModalSelectListItem key={i} name={typeSelectedFild.fName} data={item} active={false} selectedFild={selectedFild} setSelectedFild={setSelectedFild} setExpData={setExpData}/>);\r\n      }\r\n      return arr;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-content-select-list\">\r\n      {\r\n        !selectedFild.type ?\r\n          <div>Выберите поле</div> :\r\n          <>\r\n            <div>{elemTextFildAdd(selectedFild, typeSelectedFild, expData)}</div>\r\n            <div className=\"modal-content-select-list-elems\">{elemsArrAdd(selectedFild, setSelectedFild, typeSelectedFild, expData)}</div>\r\n            <div>{elemDescFildAdd(typeSelectedFild)}</div>\r\n          </>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalSelectList;","import React from 'react';\r\nimport ModalSelectList from './ModalSelectList';\r\nimport './ModalSelect.css'\r\n\r\nconst ModalSelect = ({ selectedFild, setSelectedFild, typeSelectedFild, expData, setExpData }) => {\r\n    return (\r\n        <div className=\"modal-content-select\">\r\n            <div className=\"modal-content-select-title\"><span>Данные о выделенном поле</span></div>\r\n            <ModalSelectList\r\n                selectedFild={selectedFild}\r\n                setSelectedFild={setSelectedFild}\r\n                typeSelectedFild={typeSelectedFild}\r\n                expData={expData}\r\n                setExpData={setExpData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalSelect;","import React, { useState, useContext } from 'react';\r\nimport ModalButton from './modal-content-items/ModalButton';\r\nimport ModalDataOfExp from './modal-content-items/ModalDataOfExp';\r\nimport ModalDataOfExpForCreate from './modal-content-items/ModalDataOfExpForCreate';\r\nimport ModalDataOfInitiator from './modal-content-items/ModalDataOfInitiator';\r\nimport ModalDataOfResearchProcess from './modal-content-items/ModalDataOfResearchProcess';\r\nimport ModalDataOfResearchResult from './modal-content-items/ModalDataOfResearchResult';\r\nimport ModalSelect from './modal-content-items/ModalSelect';\r\nimport { DbContext } from '../../containers/main/Main';\r\nimport './ModalContent.css'\r\n\r\nconst ModalContent = () => {\r\n  const localModalProperties = useContext(DbContext);\r\n\r\n  let tempExpValues;\r\n\r\n  const [expProperties, setExpProperties] = useState();\r\n  const [selectedFild, setSelectedFild] = useState();\r\n  const [typeSelectedFild, setTypeSelectedFild] = useState();\r\n\r\n  const onKeyDownHendler = (event) => {\r\n    let fId = Number(typeSelectedFild[selectedFild.type].fId);\r\n    let numberfArg = typeSelectedFild[selectedFild.type].fArgs.indexOf(selectedFild.value);\r\n    if (selectedFild.type === \"Подразделение инициатора\") {\r\n      if (expProperties.agency_of_initiator === \"МВД\") { numberfArg = typeSelectedFild[selectedFild.type].fArgs[0].indexOf(selectedFild.value); }\r\n      if (expProperties.agency_of_initiator === \"ГСУ СК\") { numberfArg = typeSelectedFild[selectedFild.type].fArgs[1].indexOf(selectedFild.value); }\r\n    }\r\n\r\n    function funcForNav(fId, typeSelectedFild, setSelectedFild) {\r\n      for (const type in typeSelectedFild) {\r\n        if (typeSelectedFild[type].fId === String(fId)) {\r\n          setSelectedFild((prev) => {\r\n            return { ...prev, type, value: expProperties[typeSelectedFild[type].fName] }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    switch (event.key) {\r\n      case 'Tab':\r\n        event.preventDefault();\r\n        if (fId > 0 && fId < 12) { fId = 12; funcForNav(fId, typeSelectedFild, setSelectedFild); break; }\r\n        if (fId > 11 && fId < 16) { fId = 16; funcForNav(fId, typeSelectedFild, setSelectedFild); break; }\r\n        if (fId > 15 && fId < 22) { fId = 22; funcForNav(fId, typeSelectedFild, setSelectedFild); break; }\r\n        if (fId > 21) { fId = 1; funcForNav(fId, typeSelectedFild, setSelectedFild); break; }\r\n        break;\r\n      case 'ArrowUp':\r\n        if (numberfArg > 0) {\r\n          setSelectedFild((prev) => {\r\n            if (selectedFild.type === \"Подразделение инициатора\") {\r\n              if (selectedFild.agency_of_initiator === \"МВД\") {\r\n                expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[0][numberfArg - 1]; // переписываем значение стэйта экспертизы без рендеринга\r\n                return {\r\n                  ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[0][numberfArg - 1]\r\n                }\r\n              }\r\n              if (selectedFild.agency_of_initiator === \"ГСУ СК\") {\r\n                expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[1][numberfArg - 1]; // переписываем значение стэйта экспертизы без рендеринга\r\n                return {\r\n                  ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[1][numberfArg - 1]\r\n                }\r\n              }\r\n              if (selectedFild.agency_of_initiator === \"ФСБ\") return { ...prev }\r\n              if (selectedFild.agency_of_initiator === \"Суд\") return { ...prev }\r\n            }\r\n\r\n            (Array.isArray(typeSelectedFild[selectedFild.type].fArgs)) && (expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[numberfArg - 1]); // переписываем значение стэйта экспертизы без рендеринга\r\n\r\n            return {\r\n              ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[numberfArg - 1]\r\n            }\r\n          });\r\n        } else {\r\n          setSelectedFild((prev) => {\r\n            if (selectedFild.type === \"Подразделение инициатора\") {\r\n              if (selectedFild.agency_of_initiator === \"МВД\") {\r\n                expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[0][typeSelectedFild[selectedFild.type].fArgs[0].length - 1]; // переписываем значение стэйта экспертизы без рендеринга\r\n                return {\r\n                  ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[0][typeSelectedFild[selectedFild.type].fArgs[0].length - 1]\r\n                }\r\n              }\r\n              if (selectedFild.agency_of_initiator === \"ГСУ СК\") {\r\n                expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[1][typeSelectedFild[selectedFild.type].fArgs[1].length - 1]; // переписываем значение стэйта экспертизы без рендеринга\r\n                return {\r\n                  ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[1][typeSelectedFild[selectedFild.type].fArgs[1].length - 1]\r\n                }\r\n              }\r\n              if (selectedFild.agency_of_initiator === \"ФСБ\") return { ...prev }\r\n              if (selectedFild.agency_of_initiator === \"Суд\") return { ...prev }\r\n            }\r\n\r\n            (Array.isArray(typeSelectedFild[selectedFild.type].fArgs)) && (expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[typeSelectedFild[selectedFild.type].fArgs.length - 1]); // переписываем значение стэйта экспертизы без рендеринга\r\n            return {\r\n              ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[typeSelectedFild[selectedFild.type].fArgs.length - 1]\r\n            }\r\n          });\r\n        }\r\n\r\n        break;\r\n      case 'ArrowRight':\r\n        fId += 1;\r\n        if (fId > Object.keys(typeSelectedFild).length) fId = 1;\r\n        funcForNav(fId, typeSelectedFild, setSelectedFild);\r\n        break;\r\n      case 'ArrowDown':\r\n        if (selectedFild.type === \"Подразделение инициатора\") {\r\n          if (selectedFild.agency_of_initiator === \"МВД\") {\r\n            if (numberfArg < typeSelectedFild[selectedFild.type].fArgs[0].length - 1) {\r\n              setSelectedFild((prev) => {\r\n                expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[0][numberfArg + 1]; // переписываем значение стэйта экспертизы без рендеринга\r\n                return { ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[0][numberfArg + 1] }\r\n              });\r\n            } else {\r\n              setSelectedFild((prev) => {\r\n                expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[0][0]; // переписываем значение стэйта экспертизы без рендеринга\r\n                return { ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[0][0] }\r\n              });\r\n            }\r\n          }\r\n          if (selectedFild.agency_of_initiator === \"ГСУ СК\") {\r\n            if (numberfArg < typeSelectedFild[selectedFild.type].fArgs[1].length - 1) {\r\n              setSelectedFild((prev) => {\r\n                expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[1][numberfArg + 1]; // переписываем значение стэйта экспертизы без рендеринга\r\n                return { ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[1][numberfArg + 1] }\r\n              });\r\n            } else {\r\n              setSelectedFild((prev) => {\r\n                expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[1][0]; // переписываем значение стэйта экспертизы без рендеринга\r\n                return { ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[1][0] }\r\n              });\r\n            }\r\n          }\r\n        } else if (numberfArg < typeSelectedFild[selectedFild.type].fArgs.length - 1) {\r\n          setSelectedFild((prev) => {\r\n            (Array.isArray(typeSelectedFild[selectedFild.type].fArgs)) && (expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[numberfArg + 1]); // переписываем значение стэйта экспертизы без рендеринга\r\n            return {\r\n              ...prev, value: typeSelectedFild[selectedFild.type].fArgs[numberfArg + 1]\r\n            }\r\n          });\r\n        } else {\r\n          setSelectedFild((prev) => {\r\n            (Array.isArray(typeSelectedFild[selectedFild.type].fArgs)) && (expProperties[typeSelectedFild[selectedFild.type].fName] = typeSelectedFild[selectedFild.type].fArgs[0]); // переписываем значение стэйта экспертизы без рендеринга\r\n            return {\r\n              ...prev, type: selectedFild.type, value: typeSelectedFild[selectedFild.type].fArgs[0]\r\n            }\r\n          });\r\n        }\r\n        break;\r\n      case 'ArrowLeft':\r\n        fId -= 1;\r\n        if (fId < 1) fId = Object.keys(typeSelectedFild).length;\r\n        funcForNav(fId, typeSelectedFild, setSelectedFild);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === 'update' && !expProperties) {\r\n    tempExpValues = localModalProperties.dbState.items.year2021.filter((item) => item.id === localModalProperties.modalProperties.expId)[0];\r\n    setExpProperties(tempExpValues);\r\n    setSelectedFild({\r\n      type: 'Номер экспертизы',\r\n      value: tempExpValues.id\r\n    });\r\n    setTypeSelectedFild({\r\n      'Номер экспертизы': {\r\n        fId: '1',\r\n        fArgs: [tempExpValues.id],\r\n        fName: 'id',\r\n        fDesc: 'Номер экспертизы устанавливается автоматически'\r\n      },\r\n      'Статья': {\r\n        fId: '2',\r\n        fArgs: ['105', '159'],\r\n        fName: 'article',\r\n        fDesc: 'Укажите номер статьи'\r\n      },\r\n      'Дата поступления': {\r\n        fId: '3',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_incoming',\r\n        fDesc: 'Укажите дату поступления экспертизы'\r\n      },\r\n      'Тип исследования': {\r\n        fId: '4',\r\n        fArgs: ['ТКЭД', 'Почерковедческая экспертиза'],\r\n        fName: 'category_of_research',\r\n        fDesc: 'Укажите тип исследования'\r\n      },\r\n      'По материалам': {\r\n        fId: '5',\r\n        fArgs: ['КУСП', 'УД'],\r\n        fName: 'by_materials',\r\n        fDesc: 'Укажите вид материала по которому назначена экспертиза'\r\n      },\r\n      'Вид исследования': {\r\n        fId: '6',\r\n        fArgs: ['Банкноты', 'Акцизные марки', 'Водительские документы', 'Иные документы'],\r\n        fName: 'type_of_research',\r\n        fDesc: 'Укажите вид исследуемых документов'\r\n      },\r\n      'Номер материала': {\r\n        fId: '7',\r\n        fArgs: 'fildNumber',\r\n        fName: 'number_of_the_material',\r\n        fDesc: 'Укажите номер материала по которому назначена экспертиза'\r\n      },\r\n      'Вид документа': {\r\n        fId: '8',\r\n        fArgs: ['Доллары США', 'Рубли РФ', 'Украинская гривна', 'Иное'],\r\n        fName: 'type_of_banknote',\r\n        fDesc: 'Укажите вид банкнот поступивших на исследование'\r\n      },\r\n      'Сложность экспертизы': {\r\n        fId: '9',\r\n        fArgs: ['Низкая', 'Средняя', 'Высокая'],\r\n        fName: 'difficulty_of_expertise',\r\n        fDesc: 'Укажите сложность экспертизы'\r\n      },\r\n      'Фамилия исполнителя': {\r\n        fId: '10',\r\n        fArgs: ['Польченко Т.В.', 'Поволодцкий Д.Г.', 'Балабанов А.А.', 'Марчук В.А.', 'Васильев И.С.', 'Арзяков Д.Н.', 'Киселев А.С.', 'Халилов Р.Н.', 'Еноткин А.А.', 'Дружинина Е.Ю'],\r\n        fName: 'surname_of_executor',\r\n        fDesc: 'Укажите исполнителя экспертизы'\r\n      },\r\n      'Дата назначения проверки': {\r\n        fId: '11',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_incoming_verification',\r\n        fDesc: 'Укажите дату поступления проверки'\r\n      },\r\n      'Орган инициатора': {\r\n        fId: '12',\r\n        fArgs: ['МВД', 'ГСУ СК', 'ФСБ', 'Суд'],\r\n        fName: 'agency_of_initiator',\r\n        fDesc: 'Укажите орган инициатора экспертизы'\r\n      },\r\n      'Должность инициатора': {\r\n        fId: '13',\r\n        fArgs: ['Начальник', 'Зам. начальника', 'Ст. следователь', 'Следователь', 'Ст. дознаватель', 'Дознаватель', 'Ст. о/у', 'О/у', 'Ст. у/у', 'У/у'],\r\n        fName: 'post_of_initiator',\r\n        fDesc: 'Укажите должность инициатора экспертизы'\r\n      },\r\n      'Подразделение инициатора': {\r\n        fId: '14',\r\n        fArgs: [\r\n          ['ОМВД России по г. Евпатории',\r\n            'ОМВД России по г.Феодосии',\r\n            'ОМВД России по г. Судаку',\r\n            'ОМВД России по г. Алуште',\r\n            'ОМВД России по г. Армянску',\r\n            'ОМВД России по Бахчисарайскому району',\r\n            'ОМВД России по Белогорскому району',\r\n            'МО МВД России «Джанкойский»',\r\n            'ОМВД России по Кировскому району',\r\n            'ОМВД России по Красногвард-му району',\r\n            'МОМВД России «Красноперекопский»',\r\n            'ОМВД России по Ленинскому району',\r\n            'ОМВД России по Нижнегор-му району',\r\n            'ОМВД России по Первомайскому району',\r\n            'ОМВД России по Раздольненскому району',\r\n            'МОМВД России «Сакский»',\r\n            'ОМВД России по Симферопольскому району',\r\n            'ОМВД России по Советскому району',\r\n            'ОМВД России по Черноморскому району',\r\n            'УМВД России по г. Ялте ОП №1 \"Алупкинский\"',\r\n            'УМВД России по г. Ялте ОП №2 \"Ливадийский\"',\r\n            'УМВД России по г. Ялте ОП №3 \"Массандровский\"',\r\n            'УМВД России по г. Симфер-лю ОП №1 \"Железнодорожный\"',\r\n            'УМВД России по г. Симфер-лю ОП №2 \"Киевский\"',\r\n            'УМВД России по г. Симфер-лю ОП №3 \"Центральный\"',\r\n            'УМВД России по г. Севастополю',\r\n            'УМВД России по г. Керчи'\r\n          ],\r\n          [\r\n            'ГСУ СК РФ по РК и г. Севастополю',\r\n            'СО по г. Евпатории',\r\n            'СО по г. Феодосия',\r\n            'СО по г. Судак',\r\n            'СО по г. Алушта',\r\n            'СО по г. Ялта',\r\n            'СО по г. Армянску',\r\n            'СО по Бахчисарайскому району',\r\n            'СО по Белогорскому району',\r\n            'СО по г. Джанкой',\r\n            'Кировский МСО',\r\n            'Красногвардейский МСО',\r\n            'СО по г. Красноперекопск',\r\n            'СО по Ленинскому району',\r\n            'СО по Нижнегорскому району',\r\n            'СО по Первомайскому району',\r\n            'СО по Раздольненскому району',\r\n            'СО по г. Саки',\r\n            'СО по Симферопольскому району',\r\n            'СО по Советскому району',\r\n            'СО по Черноморскому району',\r\n            'СО по г. Керчи',\r\n            'СО по Железнодорожному району г. Симферополь',\r\n            'СО по Киевскому району г. Симферополь',\r\n            'СО по Центральному району г. Симферополь'\r\n          ]\r\n        ],\r\n        fName: 'unit_of_initiator',\r\n        fDesc: 'Укажите подразделение инициатора экспертизы'\r\n      },\r\n      'Фамилия инициатора': {\r\n        fId: '15',\r\n        fArgs: 'fildText',\r\n        fName: 'surname_of_initiator',\r\n        fDesc: 'Укажите ФИО инициатора экспертизы'\r\n      },\r\n      'Дата вынесения ходатайства': {\r\n        fId: '16',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_petition',\r\n        fDesc: 'Укажите дату вынесения ходатайства'\r\n      },\r\n      'Дата продления': {\r\n        fId: '17',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_prolongation',\r\n        fDesc: 'Укажите дату продления'\r\n      },\r\n      'Конечная дата удовл-я ход-ва': {\r\n        fId: '18',\r\n        fArgs: 'calendar',\r\n        fName: 'end_date_of_petition',\r\n        fDesc: 'Конечная дата удовлетворения ходатайства заполняется автоматически'\r\n      },\r\n      'Дата до которой продлена эксп-за': {\r\n        fId: '19',\r\n        fArgs: 'calendar',\r\n        fName: 'end_date_of_prolongation',\r\n        fDesc: 'Дата до которой продлена экспертиза заполняется автоматически'\r\n      },\r\n      'Дата удовл-ния ходатайства': {\r\n        fId: '20',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_approval_of_the_petition',\r\n        fDesc: 'Укажите дату удовлетворения ходатайства'\r\n      },\r\n      'Дата уведомления': {\r\n        fId: '21',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_notification',\r\n        fDesc: 'Укажите дату вынесения уведомления'\r\n      },\r\n      'Результат': {\r\n        fId: '22',\r\n        fArgs: ['Категорический положительный', 'Вероятно положительный', 'НПВ', 'Вероятно отрицательный', 'Категорический отрицательный'], fName: 'result_of_expertise',\r\n        fDesc: 'Укажите результат проведенного исследования'\r\n      },\r\n      'Дата предпол-го окончания': {\r\n        fId: '23',\r\n        fArgs: 'calendar',\r\n        fName: 'end_date_of_expertise',\r\n        fDesc: 'Дата предположительного окончания экспертизы заполняется автоматически'\r\n      },\r\n      'Дата выполнения экспертизы': {\r\n        fId: '24',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_execution',\r\n        fDesc: 'Укажите дату выполнения экспертизы'\r\n      },\r\n      'Дата выдачи экспертизы': {\r\n        fId: '25',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_outcome',\r\n        fDesc: 'Укажите дату выдачи экспертизы'\r\n      },\r\n      'Результат проверки': {\r\n        fId: '26',\r\n        fArgs: ['Положительный', 'Отрицательный'],\r\n        fName: 'result_of_verification',\r\n        fDesc: 'Укажите результат проведенной проверки'\r\n      },\r\n      'Дата выполнения проверки': {\r\n        fId: '27',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_execution_verification',\r\n        fDesc: 'Укажите дату выполнения проверки'\r\n      },\r\n      'Дата выдачи проверки': {\r\n        fId: '28',\r\n        fArgs: 'calendar',\r\n        fName: 'date_of_outcome_verification',\r\n        fDesc: 'Укажите дату выдачи проверки'\r\n      }\r\n    });\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === 'update' && expProperties && selectedFild && typeSelectedFild) {\r\n    return (\r\n      <div className=\"modal-content\" onKeyDown={onKeyDownHendler}>\r\n        <div className=\"modal-content-info\">\r\n          <ModalDataOfExp expData={expProperties} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n          <div className=\"modal-content-wrapper\" >\r\n            <ModalDataOfInitiator expData={expProperties} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n            <ModalDataOfResearchProcess expData={expProperties} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n            <ModalDataOfResearchResult expData={expProperties} selectedFild={selectedFild} setSelectedFild={setSelectedFild} />\r\n          </div>\r\n          <ModalSelect\r\n            selectedFild={selectedFild}\r\n            setSelectedFild={setSelectedFild}\r\n            typeSelectedFild={typeSelectedFild[selectedFild.type]}\r\n            expData={expProperties}\r\n            setExpData={setExpProperties} />\r\n        </div>\r\n        <div className=\"modal-content-buttons\">\r\n          <ModalButton type=\"add\" expData={expProperties} selectedFild={selectedFild} />\r\n          <ModalButton type=\"cancel\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localModalProperties.modalProperties.type === 'create') {\r\n    return (\r\n      <div className=\"modal-content\" onKeyDown={onKeyDownHendler}>\r\n        <div className=\"modal-content-info\">\r\n          <ModalDataOfExpForCreate db={localModalProperties.dbState.items.year2021} selectedFild={selectedFild} setSelectedFild={setSelectedFild}/>\r\n        </div>\r\n        <div className=\"modal-content-buttons\">\r\n          <ModalButton type=\"add\" />\r\n          <ModalButton type=\"cancel\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalContent;","import React, { useContext } from 'react';\r\nimport ModalHeader from './ModalHeader';\r\nimport ModalContent from './ModalContent';\r\nimport { DbContext } from '../../containers/main/Main';\r\nimport './ModalContainer.css';\r\n\r\nconst ModalContainer = () => {\r\n    const localModalProperties = useContext(DbContext);\r\n    const type = {\r\n        'create': 'Создание новой экспертизы',\r\n        'update': 'Изменение данных экспертизы',\r\n    }\r\n    return (\r\n        <div className=\"modal-container\">\r\n            <ModalHeader title={type[localModalProperties.modalProperties.type]} />\r\n            <ModalContent />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalContainer;","import React, {useContext} from 'react';\r\nimport LighteningBackground from '../../components/modal-components/LighteningBackground';\r\nimport ModalContainer from '../../components/modal-components/ModalContainer';\r\nimport { DbContext } from '../main/Main';\r\nimport './Modal.css';\r\n\r\nconst Modal = () => {\r\n    const localModalProperties = useContext(DbContext);\r\n    if (localModalProperties.modalProperties.isOpen) {\r\n        return (\r\n            <>\r\n                <LighteningBackground />\r\n                <ModalContainer />\r\n            </>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Modal;","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n    return <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n}\r\n\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\nimport ListItemBtnCreateNewExp from '../../components/btn-create-new-exp/ListItemBtnCreateNewExp';\r\nimport Pagination from '../../components/pagination/Pagination';\r\nimport MainScripts from './MainScripts';\r\nimport Modal from '../modal/Modal';\r\nimport Loader from '../../components/loader/Loader';\r\nimport \"./Main.css\";\r\n\r\nexport const DbContext = React.createContext();\r\n\r\nconst Main = () => {\r\n\r\n  const urlDb = 'http://localhost:4000/api/db';\r\n\r\n  const [dbState, setDbState] = useState({\r\n    error: null,\r\n    isLoaded: false,\r\n    items: []\r\n  });\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [modalProperties, setModalProperties] = useState({\r\n    isOpen: false,\r\n    type: null,\r\n    expId: null\r\n  });\r\n\r\n  const setModalPropertiesHandlerForUpdateExp = (exp) => {\r\n    setModalProperties(() => { return { isOpen: !modalProperties.isOpen, type: 'update', expId: exp.id } });\r\n  }\r\n\r\n  const setModalPropertiesHandlerForCreateNewExp = () => {\r\n    setModalProperties(() => { return { isOpen: !modalProperties.isOpen, type: 'create', expId: null } });\r\n  }\r\n\r\n  useEffect(() => {\r\n    MainScripts.loadDB(urlDb, setDbState);\r\n  }, [])\r\n\r\n  if (dbState.isLoaded) {\r\n    const ExpsForMainPageProperties = MainScripts.loadExpsForMainPage(dbState.items, currentPage, setModalPropertiesHandlerForUpdateExp);\r\n\r\n    return (\r\n      <>\r\n        <DbContext.Provider value={{ modalProperties, setModalProperties, dbState, setDbState }}>\r\n          <Modal />\r\n        </DbContext.Provider>\r\n        <div className=\"main\">\r\n          <div className=\"main__list\">\r\n            <ListItemBtnCreateNewExp setModalPropertiesHandlerForCreateNewExp={setModalPropertiesHandlerForCreateNewExp} />\r\n            {ExpsForMainPageProperties.localDb}\r\n          </div>\r\n          {<Pagination countOfPages={ExpsForMainPageProperties.countOfPages} currentPage={currentPage} setCurrentPage={setCurrentPage} />}\r\n        </div>\r\n      </>\r\n    );\r\n  } \r\n  return (\r\n    <div className=\"main\">\r\n      <Loader /> :\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Main;","import './App.css';\r\nimport Container from './containers/container/Container';\r\nimport Header from './containers/header/Header';\r\nimport Main from './containers/main/Main';\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Main />\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}